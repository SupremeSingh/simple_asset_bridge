/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EthSideBridge,
  EthSideBridgeInterface,
} from "../../../contracts/ethContracts/EthSideBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gatewayAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethSideTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "ethDepositHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "tokensLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "polyDepositHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "tokensUnlocked",
    type: "event",
  },
  {
    inputs: [],
    name: "ethSideToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gatewayAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_bridgedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_ethDepositHash",
        type: "bytes32",
      },
    ],
    name: "lockEthSideToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_bridgedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_polyDepositHash",
        type: "bytes32",
      },
    ],
    name: "unlockEthSideToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103d03803806103d083398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b61030f806100c16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631b477ef9146100515780638b851b9514610080578063e40f92c014610093578063ee6cac43146100a8575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600154610064906001600160a01b031681565b6100a66100a136600461022c565b6100bb565b005b6100a66100b636600461022c565b6101c0565b6001546001600160a01b031633146100ee5760405162461bcd60e51b81526004016100e590610296565b60405180910390fd5b60005460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401602060405180830381600087803b15801561013c57600080fd5b505af1158015610150573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610174919061026d565b506040805183815242602082015282916001600160a01b038616917f997f5ad3086a1b8a658850f987b0102f941f46f61d8d8157530c9101a6a8d98591015b60405180910390a3505050565b6001546001600160a01b031633146101ea5760405162461bcd60e51b81526004016100e590610296565b6040805183815242602082015282916001600160a01b038616917f14f41c1c12ede47ef5ed924e5a22fd4801d1effe644984e0da1887294c8aac9591016101b3565b60008060006060848603121561024157600080fd5b83356001600160a01b038116811461025857600080fd5b95602085013595506040909401359392505050565b60006020828403121561027f57600080fd5b8151801515811461028f57600080fd5b9392505050565b60208082526023908201527f4f6e6c7920676174657761792063616e2063616c6c20746869732066756e637460408201526234b7b760e91b60608201526080019056fea26469706673582212202bf2553b6e6a7f4992dc1147bc8fe8aeaea06b25b9499ef9f8a289da3a0a7fcf64736f6c63430008070033";

type EthSideBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthSideBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthSideBridge__factory extends ContractFactory {
  constructor(...args: EthSideBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gatewayAddress: string,
    _ethSideTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthSideBridge> {
    return super.deploy(
      _gatewayAddress,
      _ethSideTokenAddress,
      overrides || {}
    ) as Promise<EthSideBridge>;
  }
  override getDeployTransaction(
    _gatewayAddress: string,
    _ethSideTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _gatewayAddress,
      _ethSideTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): EthSideBridge {
    return super.attach(address) as EthSideBridge;
  }
  override connect(signer: Signer): EthSideBridge__factory {
    return super.connect(signer) as EthSideBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthSideBridgeInterface {
    return new utils.Interface(_abi) as EthSideBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthSideBridge {
    return new Contract(address, _abi, signerOrProvider) as EthSideBridge;
  }
}
