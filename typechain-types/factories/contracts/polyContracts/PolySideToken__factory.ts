/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PolySideToken,
  PolySideTokenInterface,
} from "../../../contracts/polyContracts/PolySideToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ethPolyBridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_initialSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006005553480156200001657600080fd5b5060405162000f8b38038062000f8b83398101604081905262000039916200026c565b6040518060400160405280600d81526020016c3837b63ca9b4b232aa37b5b2b760991b815250604051806040016040528060038152602001621414d560ea1b815250816003908051906020019062000093929190620001c6565b508051620000a9906004906020840190620001c6565b5050600680546001600160a01b0319166001600160a01b03841617905550600554620000d7903390620000de565b5062000302565b6001600160a01b038216620001395760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200014d91906200029e565b90915550506001600160a01b038216600090815260208190526040812080548392906200017c9084906200029e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001d490620002c5565b90600052602060002090601f016020900481019282620001f8576000855562000243565b82601f106200021357805160ff191683800117855562000243565b8280016001018555821562000243579182015b828111156200024357825182559160200191906001019062000226565b506200025192915062000255565b5090565b5b8082111562000251576000815560010162000256565b6000602082840312156200027f57600080fd5b81516001600160a01b03811681146200029757600080fd5b9392505050565b60008219821115620002c057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002da57607f821691505b60208210811415620002fc57634e487b7160e01b600052602260045260246000fd5b50919050565b610c7980620003126000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d7146101ee578063a9059cbb14610201578063c3b2d33714610214578063dd62ed3e1461021d57600080fd5b806342966c681461019757806370a08231146101aa57806379cc6790146101d357806395d89b41146101e657600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610230565b60405161010f9190610b21565b60405180910390f35b61012b610126366004610ade565b6102c2565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610aa2565b6102da565b6040516012815260200161010f565b61012b61017d366004610ade565b6102fe565b610195610190366004610ade565b610320565b005b6101956101a5366004610b08565b610361565b61013f6101b8366004610a4d565b6001600160a01b031660009081526020819052604090205490565b6101956101e1366004610ade565b610397565b6101026103d6565b61012b6101fc366004610ade565b6103e5565b61012b61020f366004610ade565b610460565b61013f60055481565b61013f61022b366004610a6f565b61046e565b60606003805461023f90610bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461026b90610bf2565b80156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b5050505050905090565b6000336102d0818585610499565b5060019392505050565b6000336102e88582856105be565b6102f3858585610638565b506001949350505050565b6000336102d0818585610311838361046e565b61031b9190610bc3565b610499565b6006546001600160a01b031633146103535760405162461bcd60e51b815260040161034a90610b76565b60405180910390fd5b61035d8282610806565b5050565b6006546001600160a01b0316331461038b5760405162461bcd60e51b815260040161034a90610b76565b610394816108e5565b50565b6006546001600160a01b031633146103c15760405162461bcd60e51b815260040161034a90610b76565b6103cc8233836105be565b61035d82826108eb565b60606004805461023f90610bf2565b600033816103f3828661046e565b9050838110156104535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161034a565b6102f38286868403610499565b6000336102d0818585610638565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034a565b6001600160a01b03821661055c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105ca848461046e565b9050600019811461063257818110156106255760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161034a565b6106328484848403610499565b50505050565b6001600160a01b03831661069c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034a565b6001600160a01b0382166106fe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034a565b6001600160a01b038316600090815260208190526040902054818110156107765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034a565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107ad908490610bc3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107f991815260200190565b60405180910390a3610632565b6001600160a01b03821661085c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034a565b806002600082825461086e9190610bc3565b90915550506001600160a01b0382166000908152602081905260408120805483929061089b908490610bc3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b61039433825b6001600160a01b03821661094b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161034a565b6001600160a01b038216600090815260208190526040902054818110156109bf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161034a565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109ee908490610bdb565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105b1565b80356001600160a01b0381168114610a4857600080fd5b919050565b600060208284031215610a5f57600080fd5b610a6882610a31565b9392505050565b60008060408385031215610a8257600080fd5b610a8b83610a31565b9150610a9960208401610a31565b90509250929050565b600080600060608486031215610ab757600080fd5b610ac084610a31565b9250610ace60208501610a31565b9150604084013590509250925092565b60008060408385031215610af157600080fd5b610afa83610a31565b946020939093013593505050565b600060208284031215610b1a57600080fd5b5035919050565b600060208083528351808285015260005b81811015610b4e57858101830151858201604001528201610b32565b81811115610b60576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602d908201527f4f6e6c792074686520657468506f6c794272696467652063616e2063616c6c2060408201526c3a3434b990333ab731ba34b7b760991b606082015260800190565b60008219821115610bd657610bd6610c2d565b500190565b600082821015610bed57610bed610c2d565b500390565b600181811c90821680610c0657607f821691505b60208210811415610c2757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204805432b94414f4f05e2613f276dd87a7de13be2c2824d3d5046e7e6b6b0dfc164736f6c63430008070033";

type PolySideTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolySideTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolySideToken__factory extends ContractFactory {
  constructor(...args: PolySideTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ethPolyBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PolySideToken> {
    return super.deploy(
      _ethPolyBridgeAddress,
      overrides || {}
    ) as Promise<PolySideToken>;
  }
  override getDeployTransaction(
    _ethPolyBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ethPolyBridgeAddress, overrides || {});
  }
  override attach(address: string): PolySideToken {
    return super.attach(address) as PolySideToken;
  }
  override connect(signer: Signer): PolySideToken__factory {
    return super.connect(signer) as PolySideToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolySideTokenInterface {
    return new utils.Interface(_abi) as PolySideTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolySideToken {
    return new Contract(address, _abi, signerOrProvider) as PolySideToken;
  }
}
